# Default values for devops-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

AWS:
  ACCESS_KEY_ID: ""
  SECRETS_ACCESS_KEY: ""
  S3_BUCKET: ""
DATABASE:
  HOST: ""
  USER: ""
  PASSWORD: ""

image:
  repository: "localhost:5000/devops"
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "devops"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

env:
  AWS_ACCESS_KEY_ID: '{{ tpl $.Values.AWS.ACCESS_KEY_ID $ }}'
  AWS_SECRET_ACCESS_KEY: '{{ tpl $.Values.AWS.SECRETS_ACCESS_KEY $ }}'
  AWS_DEFAULT_REGION: 'eu-central-1'
  S3_BUCKET: '{{ tpl $.Values.AWS.S3_BUCKET $ }}'
  PGHOST: '{{ tpl $.Values.DATABASE.HOST $ }}'
  PGUSER: '{{ tpl $.Values.DATABASE.USER $ }}'
  PGPASSWORD: '{{ tpl $.Values.DATABASE.PASSWORD $ }}'
  PAGER: 'pspg -s 5'
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
